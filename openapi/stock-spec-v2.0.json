{
    "openapi": "3.0.0",
    "info": {
        "title": "Stock",
        "version": "3.6",
        "description": " The STOCK API provides an interface for managing stocks. This API does not include security concerns associated with a user account. This is about personal data, which can be conceived as manageable by the user.\n",
        "contact": {
            "name": "Red Hat",
            "url": "http://redhat.com",
            "email": "sgutierr@redhat.com"
        },
        "license": {
            "name": "Mozilla 2.0",
            "url": "https://www.mozilla.org/en-US/MPL/2.0/"
        }
    },
    "paths": {
        "/api/health": {
            "get": {
                "tags": [
                    "health-controller"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseEntity"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "operationId": "healthUsingGET",
                "summary": "health"
            }
        },
        "/api/stock": {
            "get": {
                "tags": [
                    "stock-controller"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StockValueControllerResponse"
                                    }
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "product_id": "some text",
                                                "store_id": 68,
                                                "units": 73
                                            },
                                            {
                                                "product_id": "some text",
                                                "store_id": 90,
                                                "units": 47
                                            }
                                        ]
                                    },
                                    "example2": {
                                        "value": [
                                            {
                                                "product_id": "some text",
                                                "store_id": 81,
                                                "units": 50
                                            },
                                            {
                                                "product_id": "some text",
                                                "store_id": 90,
                                                "units": 49
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "operationId": "getStockUsingGET_2",
                "summary": "getStock"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Item added in the inventory"
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Stock delete"
                    }
                }
            }
        },
        "/api/stock/{storeid}": {
            "get": {
                "tags": [
                    "stock-controller"
                ],
                "parameters": [
                    {
                        "examples": {
                            "example1": {
                                "value": "1"
                            }
                        },
                        "name": "storeid",
                        "description": "storeid",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StockValueControllerResponse"
                                },
                                "examples": {
                                    "example1": {
                                        "value": {
                                            "product_id": "some text demo ",
                                            "store_id": 87,
                                            "units": 80
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "operationId": "getStockUsingGET_1",
                "summary": "getStock"
            },
            "delete": {
                "parameters": [
                    {
                        "name": "storeid",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store deleted"
                    }
                }
            }
        },
        "/api/stock/{storeid}/{productid}": {
            "get": {
                "tags": [
                    "stock-controller"
                ],
                "parameters": [
                    {
                        "name": "storeid",
                        "description": "storeid",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "productid",
                        "description": "productid",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StockValueControllerResponse"
                                },
                                "examples": {
                                    "example1": {
                                        "value": {
                                            "product_id": "some AVAYA",
                                            "store_id": 34,
                                            "units": 81
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "operationId": "getStockUsingGET",
                "summary": "getStock"
            }
        },
        "/api/store": {
            "get": {
                "tags": [
                    "stock-controller"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StoreValueControllerResponse"
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "operationId": "getStoresUsingGET",
                "summary": "getStores"
            }
        },
        "/invoices": {
            "summary": "Path used to manage the list of invoices.",
            "description": "The REST endpoint/path used to list and create zero or more `invoice` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/invoice"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `invoice` entities."
                    }
                },
                "operationId": "getinvoices",
                "summary": "List All invoices",
                "description": "Gets a list of all `invoice` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `invoice` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/invoice"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createinvoice",
                "summary": "Create a invoice",
                "description": "Creates a new instance of a `invoice`."
            }
        },
        "/invoices/{invoiceId}": {
            "summary": "Path used to manage a single invoice.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `invoice`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/invoice"
                                },
                                "examples": {
                                    "invoiceexample": {
                                        "value": {
                                            "id": "some text",
                                            "name": "some text",
                                            "paymentPerYear": 55,
                                            "paymentValue": 8.45,
                                            "startsOnDay": 95,
                                            "startsOnMonth": 83,
                                            "startsOnYear": 44
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns a single `invoice`."
                    },
                    "401": {
                        "description": "No authorized response"
                    }
                },
                "operationId": "getinvoice",
                "summary": "Get a invoice",
                "description": "Gets the details of a single instance of a `invoice`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `invoice` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/invoice"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateinvoice",
                "summary": "Update a invoice",
                "description": "Updates an existing `invoice`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteinvoice",
                "summary": "Delete a invoice",
                "description": "Deletes an existing `invoice`."
            },
            "parameters": [
                {
                    "name": "invoiceId",
                    "description": "A unique identifier for a `invoice`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "ResponseEntity": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object"
                    },
                    "statusCode": {
                        "enum": [
                            "100",
                            "101",
                            "102",
                            "103",
                            "200",
                            "201",
                            "202",
                            "203",
                            "204",
                            "205",
                            "206",
                            "207",
                            "208",
                            "226",
                            "300",
                            "301",
                            "302",
                            "303",
                            "304",
                            "305",
                            "307",
                            "308",
                            "400",
                            "401",
                            "402",
                            "403",
                            "404",
                            "405",
                            "406",
                            "407",
                            "408",
                            "409",
                            "410",
                            "411",
                            "412",
                            "413",
                            "414",
                            "415",
                            "416",
                            "417",
                            "418",
                            "419",
                            "420",
                            "421",
                            "422",
                            "423",
                            "424",
                            "426",
                            "428",
                            "429",
                            "431",
                            "451",
                            "500",
                            "501",
                            "502",
                            "503",
                            "504",
                            "505",
                            "506",
                            "507",
                            "508",
                            "509",
                            "510",
                            "511"
                        ],
                        "type": "string"
                    },
                    "statusCodeValue": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "StockValueControllerResponse": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string"
                    },
                    "store_id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "units": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "StoreValueControllerResponse": {
                "type": "object",
                "properties": {
                    "store_id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "store_name": {
                        "type": "string"
                    }
                }
            },
            "invoice": {
                "title": "Root Type for invoice",
                "description": "Invoice entity",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "paymentPerYear": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "paymentValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "startsOnDay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startsOnMonth": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startsOnYear": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "example": {
                    "id": "",
                    "name": "some text",
                    "paymentPerYear": 39,
                    "paymentValue": 90.87,
                    "startsOnDay": 21,
                    "startsOnMonth": 24,
                    "startsOnYear": 55
                }
            }
        },
        "securitySchemes": {
            "apikey": {
                "type": "apiKey",
                "description": "3scale API-Key",
                "name": "api-key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "apikey": [
            ]
        }
    ],
    "tags": [
        {
            "name": "stock-controller",
            "description": "Stock Controller"
        },
        {
            "name": "health-controller",
            "description": "Health Controller"
        }
    ]
}